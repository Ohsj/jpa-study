buildscript {
    ext {
        springBootVersion = '2.6.7'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE'
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco' // to test coverage

    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'me.osj4532'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.ewerk.gradle.plugins.querydsl'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    jacoco {
        toolVersion = "0.8.5"
        reportsDir(file("$buildDir/customJacocoReportDir"))
    }

//    jacocoTestReport {
//        reports {
//            xml.enabled(false)
//            csv.enabled(false)
//            html.destination(file("${buildDir}/jacocoHtml"))
//        }
//    }

// 빌드 시 테스트 커버리지에 제한을 두고 실패하도록 만들수 있다.
//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            limit {
//                minimum = 0.6
//            }
//        }
//    }
//}

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        runtimeOnly 'org.postgresql:postgresql'

        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        runtimeOnly 'com.h2database:h2'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

}

